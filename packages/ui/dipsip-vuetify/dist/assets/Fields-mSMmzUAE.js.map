{"version":3,"file":"Fields-mSMmzUAE.js","sources":["../../src/utils/Fields.vue"],"sourcesContent":["<template>\n  <div>\n    <button @click=\"fetchFields\">Fetch Fields</button>\n    <div v-if=\"allTables.length\">\n      <h2>Dataset Fields</h2>\n      <div v-for=\"table in allTables\" :key=\"table.array_name\" class=\"card\">\n        <h3>{{ table.array_name }}</h3>\n        <ul>\n          <li v-for=\"field in table.fields\" :key=\"field\">{{ field }}</li>\n        </ul>\n        <h4>Fields Unique to Table</h4>\n        <ul>\n          <li v-for=\"uniqueField in table.uniqueFields\" :key=\"uniqueField\">{{ uniqueField }}</li>\n        </ul>\n      </div>\n      <h2>Duplicate Fields</h2>\n      <div class=\"card\" v-if=\"duplicateFields.length\">\n        <table>\n          <thead>\n            <tr>\n              <th>Field</th>\n              <th>Found In Arrays</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"dup in duplicateFields\" :key=\"dup.field\">\n              <td>{{ dup.field }}</td>\n              <td>{{ dup.found_in_arrays.join(\", \") }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      allTables: [],\n      duplicateFields: []\n    };\n  },\n  methods: {\n    async fetchFields() {\n      try {\n        const response = await fetch(\"/api/chat/promptfields?noTransform=true\");\n        this.allTables = await response.json();\n        this.findDuplicatesAndUniques();\n      } catch (error) {\n        console.error(\"Error fetching fields:\", error);\n      }\n    },\n    findDuplicatesAndUniques() {\n      const ignoredFields = new Set([\"company_name\",\"company_nse_symbol\",\"company_sector\",\"company_market_cap_in_crores\",\"company_market_cap_category\",\"year\",\"month\",\"quarter\"]);\n      const fieldMap = new Map();\n      \n      this.allTables.forEach(({ array_name, fields }) => {\n        if (!Array.isArray(fields)) {\n          console.warn(`Skipping ${array_name} due to invalid fields:`, fields);\n          return;\n        }\n        fields.forEach(field => {\n          if (!ignoredFields.has(field)) {\n            if (!fieldMap.has(field)) {\n              fieldMap.set(field, []);\n            }\n            fieldMap.get(field).push(array_name);\n          }\n        });\n      });\n\n      this.duplicateFields = Array.from(fieldMap.entries())\n        .filter(([_, arrays]) => arrays.length > 1)\n        .map(([field, arrays]) => ({ field, found_in_arrays: arrays }));\n      \n      // Compute unique fields for each table\n      this.allTables.forEach(table => {\n        if (!Array.isArray(table.fields)) return;\n        table.uniqueFields = table.fields.filter(field => \n          !ignoredFields.has(field) && fieldMap.get(field)?.length === 1\n        );\n      });\n    }\n  },\n  mounted() {\n    this.fetchFields();\n  }\n};\n</script>\n\n<style>\n.card {\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin: 10px 0;\n  border-radius: 5px;\n  background: #f9f9f9;\n}\n\nbutton {\n  padding: 10px;\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n</style>\n"],"names":["_sfc_main","response","error","ignoredFields","fieldMap","array_name","fields","field","_","arrays","table","_a","_createElementBlock","_createElementVNode","$options","args","$data","_openBlock","_hoisted_1","_cache","_Fragment","_renderList","_toDisplayString","uniqueField","_hoisted_2","dup","_createCommentVNode"],"mappings":"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"}