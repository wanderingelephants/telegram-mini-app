{"version":3,"file":"RiskProfile-Bbbp_13E.js","sources":["../../src/components/RiskRadarChart.vue","../../src/views/RiskProfile.vue"],"sourcesContent":["<template>\n  <div class=\"risk-radar-chart\">\n    <apexcharts\n      id=\"risk-radar\"\n      ref=\"chartRef\"\n      :key=\"componentKey\"\n      width=\"100%\"\n      height=\"600\"\n      type=\"radar\"\n      :options=\"chartOptions\"\n      :series=\"series\"\n    ></apexcharts>\n  </div>\n</template>\n\n<script>\nimport VueApexCharts from 'vue3-apexcharts'\n\nexport default {\n  name: 'RiskRadarChart',\n  components: {\n    apexcharts: VueApexCharts\n  },\n  props: {\n    categoryScores: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  data() {\n    return {\n      componentKey: 0\n    }\n  },\n  computed: {\n    series() {\n      return [{\n        name: 'Category Score',\n        data: this.categoryScores.map(item => item.score)\n      }]\n    },\n    chartOptions() {\n      return {\n        chart: {\n          type: 'radar',\n          toolbar: {\n            show: false\n          },\n          fontFamily: 'inherit'\n        },\n        xaxis: {\n          categories: this.categoryScores.map(item => item.category),\n          labels: {\n            style: {\n              fontSize: '12px'\n            }\n          }\n        },\n        yaxis: {\n          show: true,\n          min: 0,\n          max: 100,\n          labels: {\n            formatter: (val) => `${Math.round(val)}%`\n          }\n        },\n        fill: {\n          opacity: 0.6,\n          colors: ['#FFA000']\n        },\n        stroke: {\n          width: 2,\n          colors: ['#FFA000']\n        },\n        markers: {\n          size: 4,\n          colors: ['#FFA000'],\n          hover: {\n            size: 6\n          }\n        },\n        tooltip: {\n          y: {\n            formatter: (val) => `${Math.round(val)}%`\n          }\n        },\n        theme: {\n          palette: 'palette1'\n        },\n        plotOptions: {\n          radar: {\n            polygons: {\n              strokeColors: '#e9e9e9',\n              fill: {\n                colors: ['#f8f8f8', '#fff']\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  watch: {\n    categoryScores: {\n      handler(newVal) {\n        console.log('categoryScores changed:', newVal)\n        // Instead of incrementing key, try updating the chart\n        this.$nextTick(() => {\n          if (this.$refs.chartRef) {\n            this.$refs.chartRef.updateOptions(this.chartOptions)\n            this.$refs.chartRef.updateSeries(this.series)\n          }\n        })\n      },\n      deep: true\n    },\n    series: {\n      handler(newVal) {\n        console.log('series changed:', newVal)\n      },\n      deep: true\n    },\n    chartOptions: {\n      handler(newVal) {\n        console.log('options changed:', newVal)\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      console.log(\"Mounting chart...\")\n      if (this.$refs.chartRef) {\n        console.log(\"Chart ref found\")\n      }\n    })\n  },\n  beforeUnmount() {\n    // Cleanup\n    if (this.chart) {\n      this.chart.destroy()\n    }\n  },\n  errorCaptured(err, component, info) {\n    console.error('Chart Error:', err)\n    console.error('Component:', component)\n    console.error('Info:', info)\n    return false\n  }\n}\n</script>\n\n<style scoped>\n.risk-radar-chart {\n  width: 100%;\n  margin: 0 auto;\n}\n</style>","<template>\n  <!-- Remove max-width constraint and use fluid container -->\n  <v-container fluid>\n    <v-row justify=\"center\">\n      <!-- Responsive column that adjusts based on screen size -->\n      <v-col cols=\"12\" sm=\"12\" md=\"10\" lg=\"8\" xl=\"6\">\n        <v-card class=\"elevation-2\">\n          <v-card-title class=\"text-h5 text-sm-h4 py-4\">\n            {{ showResults ? 'Your Investment Profile & Recommendations' : 'Investment Profile Assessment' }}\n          </v-card-title>\n\n          <v-card-text v-if=\"!showResults\">\n            <!-- Progress Section -->\n            <v-row class=\"mb-6\">\n              <v-col cols=\"12\">\n                <v-progress-linear\n                  :model-value=\"progressPercentage\"\n                  height=\"20\"\n                  color=\"primary\"\n                  rounded\n                >\n                  <template v-slot:default=\"{ value }\">\n                    <strong>{{ Math.ceil(value) }}%</strong>\n                  </template>\n                </v-progress-linear>\n                \n                <!-- Progress Info -->\n                <div class=\"mt-2 d-flex flex-column flex-sm-row justify-space-between\">\n                  <span class=\"text-subtitle-2\">Section: {{ currentSection.title }}</span>\n                  <span class=\"text-subtitle-2\">Question {{ currentQuestionNumber }} of {{ totalQuestions }}</span>\n                </div>\n              </v-col>\n            </v-row>\n\n            <!-- Question Section -->\n            <v-row>\n              <v-col cols=\"12\">\n                <h3 class=\"text-h6 mb-4\">\n                  {{ currentQuestion.text }}\n                </h3>\n\n                <!-- Options with improved responsive layout -->\n                <div class=\"options-container\">\n                  <v-btn\n                    v-for=\"option in currentQuestion.options\"\n                    :key=\"option.value\"\n                    variant=\"outlined\"\n                    class=\"option-button mb-3 text-start\"\n                    block\n                    height=\"auto\"\n                    min-height=\"48\"\n                    @click=\"handleAnswer(option)\"\n                  >\n                    <div class=\"pa-3 w-100\">\n                      <div>{{ option.text }}</div>\n                      <div v-if=\"option.note\" class=\"text-caption text-grey mt-1\">\n                        {{ option.note }}\n                      </div>\n                    </div>\n                  </v-btn>\n                </div>\n              </v-col>\n            </v-row>\n          </v-card-text>\n\n          <v-card-text v-else>\n            <!-- Results Section -->\n            <v-row>\n              <v-col cols=\"12\">\n                <div class=\"mb-6\">\n                  <!--<h3 class=\"text-h6 mb-2\">Risk Score: {{ riskProfile.title }}</h3>\n                  <p class=\"mb-4\">{{ riskProfile.description }}</p> -->\n                  <div class=\"mb-6\">\n    <h3 class=\"text-h6 mb-2\">Risk Profile: {{ riskProfile.title }}</h3>\n    <p class=\"mb-4\">{{ riskProfile.description }}</p>\n    <RiskRadarChart \n      :category-scores=\"categoryScores\"\n      class=\"mt-4\"\n    />\n  </div>\n                </div>\n\n                <!-- Recommendations Section -->\n                <div class=\"mb-6\">\n                  <h3 class=\"text-h6 mb-4\">Recommended ETF Allocation:</h3>\n                  <v-expansion-panels>\n                    <v-expansion-panel\n                      v-for=\"(allocation, category) in recommendedAllocation\"\n                      :key=\"category\"\n                    >\n                      <v-expansion-panel-title>\n                        <div class=\"d-flex justify-space-between align-center w-100\">\n                          <span>{{ category }}</span>\n                          <span class=\"text-primary\">{{ allocation.percentage }}%</span>\n                        </div>\n                      </v-expansion-panel-title>\n                      <v-expansion-panel-text>\n                        <v-list>\n                          <v-list-item\n                            v-for=\"etf in allocation.etfs\"\n                            :key=\"etf.code\"\n                          >\n                            <v-list-item-title>{{ etf.name }}</v-list-item-title>\n                            <v-list-item-subtitle>\n                              {{ etf.code }} - {{ etf.weight }}%\n                            </v-list-item-subtitle>\n                          </v-list-item>\n                        </v-list>\n                      </v-expansion-panel-text>\n                    </v-expansion-panel>\n                  </v-expansion-panels>\n                </div>\n\n                <!-- Reset Button -->\n                <v-row class=\"mt-6\">\n                  <v-col cols=\"12\" sm=\"8\" md=\"6\" class=\"mx-auto\">\n                    <v-btn\n                      block\n                      color=\"primary\"\n                      @click=\"resetQuiz\"\n                    >\n                      Retake Assessment\n                    </v-btn>\n                  </v-col>\n                </v-row>\n              </v-col>\n            </v-row>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<style scoped>\n.options-container {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n.risk-radar-chart {\n  position: relative;\n  min-height: 400px;\n  width: 100%;\n}\n\n.option-button {\n  white-space: normal !important;\n  height: auto !important;\n  text-transform: none !important;\n}\n\n/* Ensure text wraps properly on mobile */\n.option-button :deep(.v-btn__content) {\n  white-space: normal;\n  height: auto;\n  flex-wrap: wrap;\n  width: 100%;\n}\n\n/* Responsive text sizes */\n@media (max-width: 600px) {\n  .text-h5 {\n    font-size: 1.25rem !important;\n  }\n  \n  .text-h6 {\n    font-size: 1.125rem !important;\n  }\n}\n</style>\n\n<script setup>\nimport VueApexCharts from \"vue3-apexcharts\";\nimport RiskRadarChart from '../components/RiskRadarChart.vue'; \nimport { ref, computed } from 'vue'\n\ncomponents: {\n  apexcharts: VueApexCharts,\n  RiskRadarChart\n}\n// Add this to your existing script setup section\nconst categoryScores = computed(() => {\n  const scores = new Map();\n  const counts = new Map();\n  \n  // Initialize maps for all sections\n  sections.forEach(section => {\n    scores.set(section.title, 0);\n    counts.set(section.title, 0);\n  });\n\n  // Calculate scores for each section\n  Object.entries(answers.value).forEach(([questionId, answer]) => {\n    for (const section of sections) {\n      const question = section.questions.find(q => q.id === questionId);\n      if (question && answer.risk_score) {\n        const currentScore = scores.get(section.title) || 0;\n        const currentCount = counts.get(section.title) || 0;\n        \n        scores.set(section.title, currentScore + ((answer.risk_score / 4) * 100));\n        counts.set(section.title, currentCount + 1);\n        break;\n      }\n    }\n  });\n\n  // Calculate averages and format for the chart\n  return Array.from(scores.entries()).map(([category, score]) => ({\n    category,\n    score: counts.get(category) ? Math.round(score / counts.get(category)) : 0\n  }));\n});\n\nconst sections = [\n  {\n    id: 'demographics',\n    title: 'Personal Demographics',\n    questions: [\n      {\n        id: 'age_group',\n        text: 'Which age group do you belong to?',\n        type: 'demographics',\n        user_answer: null,\n        options: [\n          { \n            value: '18_25', \n            text: '18-25 years', \n            weight: 4, \n            risk_score: 4,\n            note: 'Longer investment horizon allows for higher risk capacity'\n          },\n          { \n            value: '26_35', \n            text: '26-35 years', \n            weight: 4, \n            risk_score: 4,\n            note: 'Prime earning years with good risk capacity'\n          },\n          { \n            value: '36_45', \n            text: '36-45 years', \n            weight: 3, \n            risk_score: 3,\n            note: 'Balanced approach recommended'\n          },\n          { \n            value: '46_55', \n            text: '46-55 years', \n            weight: 2, \n            risk_score: 2,\n            note: 'Consider reducing high-risk exposures'\n          },\n          { \n            value: '56_65', \n            text: '56-65 years', \n            weight: 1, \n            risk_score: 1,\n            note: 'Focus on capital preservation'\n          },\n          { \n            value: 'above_65', \n            text: 'Above 65 years', \n            weight: 1, \n            risk_score: 1,\n            note: 'Conservative approach recommended'\n          }\n        ]\n      },\n      {\n        id: 'employment_status',\n        text: 'What is your current employment status?',\n        type: 'demographics',\n        user_answer: null,\n        options: [\n          { \n            value: 'salaried', \n            text: 'Salaried (Private Sector)', \n            weight: 3,\n            income_stability: 'stable'\n          },\n          { \n            value: 'govt', \n            text: 'Government Employee', \n            weight: 4,\n            income_stability: 'very_stable'\n          },\n          { \n            value: 'business', \n            text: 'Self-Employed/Business Owner', \n            weight: 2,\n            income_stability: 'variable'\n          },\n          { \n            value: 'professional', \n            text: 'Independent Professional (Doctor/CA/Lawyer etc.)', \n            weight: 3,\n            income_stability: 'stable'\n          },\n          { \n            value: 'retired', \n            text: 'Retired', \n            weight: 1,\n            income_stability: 'fixed'\n          },\n          { \n            value: 'other', \n            text: 'Other/Not Currently Employed', \n            weight: 1,\n            income_stability: 'uncertain'\n          }\n        ]\n      },\n      {\n        id: 'income_source',\n        text: 'How would you describe your income stream?',\n        type: 'demographics',\n        user_answer: null,\n        options: [\n          { \n            value: 'very_stable', \n            text: 'Very stable with regular increments', \n            weight: 4,\n            risk_score: 4\n          },\n          { \n            value: 'stable', \n            text: 'Stable but limited growth', \n            weight: 3,\n            risk_score: 3\n          },\n          { \n            value: 'variable', \n            text: 'Variable but predictable', \n            weight: 2,\n            risk_score: 2\n          },\n          { \n            value: 'uncertain', \n            text: 'Highly variable/uncertain', \n            weight: 1,\n            risk_score: 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    id: 'financial_health',\n    title: 'Financial Health Assessment',\n    questions: [\n      {\n        id: 'monthly_savings',\n        text: 'What percentage of your monthly income do you save/invest?',\n        type: 'savings_capacity',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'Less than 10%', weight: 1, risk_score: 1 },\n          { value: 2, text: '10% to 20%', weight: 2, risk_score: 2 },\n          { value: 3, text: '20% to 30%', weight: 3, risk_score: 3 },\n          { value: 4, text: 'More than 30%', weight: 4, risk_score: 4 }\n        ]\n      },\n      {\n        id: 'emergency_fund',\n        text: 'Do you have an emergency fund covering your expenses?',\n        type: 'financial_security',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'No emergency fund', weight: 0, risk_score: 1 },\n          { value: 2, text: '1-3 months of expenses', weight: 2, risk_score: 2 },\n          { value: 3, text: '3-6 months of expenses', weight: 3, risk_score: 3 },\n          { value: 4, text: 'More than 6 months of expenses', weight: 4, risk_score: 4 }\n        ]\n      },\n      {\n        id: 'debt_obligations',\n        text: 'What percentage of your monthly income goes towards EMIs/debt payments?',\n        type: 'financial_security',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'More than 50%', weight: 1, risk_score: 1 },\n          { value: 2, text: '30% to 50%', weight: 2, risk_score: 2 },\n          { value: 3, text: '10% to 30%', weight: 3, risk_score: 3 },\n          { value: 4, text: 'Less than 10%', weight: 4, risk_score: 4 }\n        ]\n      }\n    ]\n  },\n  {\n    id: 'market_understanding',\n    title: 'Market Understanding',\n    questions: [\n      {\n        id: 'market_experience',\n        text: 'How long have you been investing in stock markets?',\n        type: 'experience',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'Never invested before', weight: 1, risk_score: 1 },\n          { value: 2, text: 'Less than 2 years', weight: 2, risk_score: 2 },\n          { value: 3, text: '2-5 years', weight: 3, risk_score: 3 },\n          { value: 4, text: 'More than 5 years', weight: 4, risk_score: 4 }\n        ]\n      },\n      {\n        id: 'volatility_understanding',\n        text: 'How well do you understand market volatility and its impact on different sized companies?',\n        type: 'experience',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'Limited understanding', weight: 1, risk_score: 1 },\n          { value: 2, text: 'Basic understanding of large companies', weight: 2, risk_score: 2 },\n          { value: 3, text: 'Good understanding of market dynamics', weight: 3, risk_score: 3 },\n          { value: 4, text: 'Deep understanding of all market segments', weight: 4, risk_score: 4 }\n        ]\n      }\n    ]\n  },\n  /*{\n    id: 'market_cap_preferences',\n    title: 'Market Capitalization Preferences',\n    questions: [\n      {\n        id: 'cap_volatility',\n        text: 'Different market caps have different volatility levels. Which statement best describes your comfort level?',\n        type: 'preference',\n        options: [\n          { \n            value: 'large_cap', \n            text: 'I prefer stable, well-established companies even if returns are moderate', \n            weight: 1, \n            cap_preference: 'large' \n          },\n          { \n            value: 'mid_cap', \n            text: 'I can accept moderate volatility for companies with good growth potential', \n            weight: 2, \n            cap_preference: 'mid' \n          },\n          { \n            value: 'small_cap', \n            text: 'I am comfortable with high volatility for potentially higher returns', \n            weight: 3, \n            cap_preference: 'small' \n          },\n          { \n            value: 'mixed', \n            text: 'I prefer a mix of different market caps for diversification', \n            weight: 2, \n            cap_preference: 'mixed' \n          }\n        ]\n      },\n      {\n        id: 'alternative_assets',\n        text: 'Besides Stock Market, which investment asset interest you?',\n        type: 'preference',\n        options: [\n          { value: 'gold', text: 'Gold/Silver', weight: 1, asset: 'precious_metals' },\n          { value: 'real_estate', text: 'Real Estate (Commercial)', weight: 1, asset: 'reit' },\n          { value: 'infra', text: 'Infrastructure', weight: 1, asset: 'invit' },\n          { value: 'none', text: 'Prefer only Stocks', weight: 1, asset: 'equity' }\n        ]\n      }\n    ]\n  },*/\n  {\n    id: 'risk_assessment',\n    title: 'Risk Assessment',\n    questions: [\n      {\n        id: 'investment_horizon',\n        text: 'What is your primary investment time horizon?',\n        type: 'time_horizon',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'Less than 1 year', weight: 1, risk_score: 1 },\n          { value: 2, text: '1-3 years', weight: 2, risk_score: 2 },\n          { value: 3, text: '3-5 years', weight: 3, risk_score: 3 },\n          { value: 4, text: 'More than 5 years', weight: 4, risk_score: 4 }\n        ]\n      },\n      {\n        id: 'loss_tolerance',\n        text: 'If your portfolio dropped 20% in a month, what would you do?',\n        type: 'risk_tolerance',\n        user_answer: null,\n        options: [\n          { value: 1, text: 'Sell everything immediately', weight: 1, risk_score: 1 },\n          { value: 2, text: 'Sell some investments', weight: 2, risk_score: 2 },\n          { value: 3, text: 'Hold and wait for recovery', weight: 3, risk_score: 3 },\n          { value: 4, text: 'Buy more at lower prices', weight: 4, risk_score: 4 }\n        ]\n      }\n    ]\n  }\n]\n\nconst currentSectionIndex = ref(0)\nconst currentQuestionIndex = ref(0)\nconst answers = ref({})\nconst showResults = ref(false)\n\nconst currentSection = computed(() => sections[currentSectionIndex.value])\nconst currentQuestion = computed(() => currentSection.value.questions[currentQuestionIndex.value])\nconst currentQuestionNumber = computed(() => {\n  let number = 1\n  for (let i = 0; i < currentSectionIndex.value; i++) {\n    number += sections[i].questions.length\n  }\n  return number + currentQuestionIndex.value\n})\n\nconst totalQuestions = computed(() => {\n  return sections.reduce((total, section) => total + section.questions.length, 0)\n})\nconst progressPercentage = computed(() => {\n  return ((currentQuestionNumber.value - 1) / totalQuestions.value) * 100\n})\nconst riskScore = computed(() => {\n  let totalRiskScore = 0\n  let totalQuestions = 0\n\n  Object.values(answers.value).forEach(answer => {\n    if (answer.risk_score) {\n      totalRiskScore += answer.risk_score\n      totalQuestions++\n    }\n  })\n\n  return totalQuestions ? (totalRiskScore / (totalQuestions * 4)) * 100 : 0\n})\n\nconst riskProfile = computed(() => {\n  const score = riskScore.value\n  if (score < 25) {\n    return {\n      title: 'Conservative',\n      description: 'You prefer stability and capital preservation. Focus on low-volatility investments with steady returns.'\n    }\n  } else if (score < 50) {\n    return {\n      title: 'Moderate',\n      description: 'You seek a balance between growth and stability, comfortable with moderate market fluctuations.'\n    }\n  } else if (score < 75) {\n    return {\n      title: 'Growth',\n      description: 'You prioritize long-term growth and can tolerate significant market volatility.'\n    }\n  } else {\n    return {\n      title: 'Aggressive',\n      description: 'You seek maximum growth potential and are comfortable with high market volatility.'\n    }\n  }\n})\nconst calculateRiskProfile = computed(() => {\n  const age = answers.value.age_group?.value || ''\n  const employmentStatus = answers.value.employment_status?.value || ''\n  const incomeStability = answers.value.income_source?.value || ''\n  \n  let baseRiskScore = riskScore.value\n\n  // Age-based adjustments\n  if (age.startsWith('18') || age.startsWith('26')) {\n    baseRiskScore *= 1.2 // Increase risk capacity for younger investors\n  } else if (age.startsWith('56') || age.startsWith('above')) {\n    baseRiskScore *= 0.8 // Reduce risk capacity for older investors\n  }\n\n  // Employment stability adjustments\n  if (employmentStatus === 'govt') {\n    baseRiskScore *= 1.2 // Slightly increase for very stable employment\n  } else if (employmentStatus === 'retired' || employmentStatus === 'other') {\n    baseRiskScore *= 0.8 // Reduce for uncertain employment\n  }\n\n  // Income stability adjustments\n  if (incomeStability === 'very_stable') {\n    baseRiskScore *= 1.1\n  } else if (incomeStability === 'uncertain') {\n    baseRiskScore *= 0.8\n  }\n\n  // Cap the final score at 100\n  const finalScore = Math.min(baseRiskScore, 100)\n\n  if (finalScore < 25) {\n    return {\n      title: 'Conservative',\n      description: 'Based on your age, employment status, and other factors, a conservative approach is recommended. Focus on capital preservation with stable, low-volatility investments.'\n    }\n  } else if (finalScore < 50) {\n    return {\n      title: 'Moderate',\n      description: 'Your profile suggests a balanced approach. While you have some risk capacity, maintaining stability is important given your circumstances.'\n    }\n  } else if (finalScore < 75) {\n    return {\n      title: 'Growth',\n      description: 'Your age and income stability support a growth-oriented approach. You can consider a good mix of different market caps while maintaining some safety.'\n    }\n  } else {\n    return {\n      title: 'Aggressive',\n      description: 'Your young age and stable income support an aggressive growth approach. You can consider higher exposure to mid and small caps.'\n    }\n  }\n})\n\nconst recommendedAllocation = computed(() => {\n  const profile = riskProfile.value.title\n  const age = answers.value.age_group?.value || ''\n  const capPreference = answers.value.cap_volatility?.cap_preference || 'mixed'\n  const alternativeChoice = answers.value.alternative_assets?.value || 'none'\n  \n  // Base allocations that will be modified based on preferences\n  let baseAllocation = {\n    Conservative: {\n      equityTotal: 40,\n      alternativesTotal: 30,\n      debtTotal: 30,\n      largeCap: 35,\n      midCap: 5,\n      smallCap: 0\n    },\n    Moderate: {\n      equityTotal: 60,\n      alternativesTotal: 20,\n      debtTotal: 20,\n      largeCap: 40,\n      midCap: 15,\n      smallCap: 5\n    },\n    Growth: {\n      equityTotal: 75,\n      alternativesTotal: 15,\n      debtTotal: 10,\n      largeCap: 40,\n      midCap: 25,\n      smallCap: 10\n    },\n    Aggressive: {\n      equityTotal: 85,\n      alternativesTotal: 10,\n      debtTotal: 5,\n      largeCap: 35,\n      midCap: 30,\n      smallCap: 20\n    }\n  }\n\n  // Get base allocation for the risk profile\n  let allocation = baseAllocation[profile]\n\n  // Final allocation object to return\n  let finalAllocation = {}\n\n  // Handle Equity allocation based on cap preference\n  if (allocation.equityTotal > 0) {\n    // Adjust cap distribution based on user preference\n    let equityAllocation = {}\n    switch(capPreference) {\n      case 'large':\n        equityAllocation = {\n          'Large Cap Equity': {\n            percentage: allocation.equityTotal * 0.8,\n            etfs: [\n              { name: 'Nifty 50 ETF', code: 'NIFTYBEES', weight: allocation.equityTotal * 0.5 },\n              { name: 'Nifty Next 50 ETF', code: 'NIFTYNXT50', weight: allocation.equityTotal * 0.3 }\n            ]\n          },\n          'Mid Cap Equity': {\n            percentage: allocation.equityTotal * 0.2,\n            etfs: [\n              { name: 'Nifty Midcap 150 ETF', code: 'MIDCAPETF', weight: allocation.equityTotal * 0.2 }\n            ]\n          }\n        }\n        break\n      case 'mid':\n        equityAllocation = {\n          'Mid Cap Equity': {\n            percentage: allocation.equityTotal * 0.6,\n            etfs: [\n              { name: 'Nifty Midcap 150 ETF', code: 'MIDCAPETF', weight: allocation.equityTotal * 0.6 }\n            ]\n          },\n          'Large Cap Equity': {\n            percentage: allocation.equityTotal * 0.4,\n            etfs: [\n              { name: 'Nifty 50 ETF', code: 'NIFTYBEES', weight: allocation.equityTotal * 0.4 }\n            ]\n          }\n        }\n        break\n      case 'small':\n        equityAllocation = {\n          'Small Cap Equity': {\n            percentage: allocation.equityTotal * 0.5,\n            etfs: [\n              { name: 'Nifty Smallcap 250 ETF', code: 'SMALLCAP', weight: allocation.equityTotal * 0.5 }\n            ]\n          },\n          'Mid Cap Equity': {\n            percentage: allocation.equityTotal * 0.3,\n            etfs: [\n              { name: 'Nifty Midcap 150 ETF', code: 'MIDCAPETF', weight: allocation.equityTotal * 0.3 }\n            ]\n          },\n          'Large Cap Equity': {\n            percentage: allocation.equityTotal * 0.2,\n            etfs: [\n              { name: 'Nifty 50 ETF', code: 'NIFTYBEES', weight: allocation.equityTotal * 0.2 }\n            ]\n          }\n        }\n        break\n      default: // mixed\n        equityAllocation = {\n          'Large Cap Equity': {\n            percentage: allocation.largeCap,\n            etfs: [\n              { name: 'Nifty 50 ETF', code: 'NIFTYBEES', weight: allocation.largeCap }\n            ]\n          },\n          'Mid Cap Equity': {\n            percentage: allocation.midCap,\n            etfs: [\n              { name: 'Nifty Midcap 150 ETF', code: 'MIDCAPETF', weight: allocation.midCap }\n            ]\n          },\n          'Small Cap Equity': {\n            percentage: allocation.smallCap,\n            etfs: [\n              { name: 'Nifty Smallcap 250 ETF', code: 'SMALLCAP', weight: allocation.smallCap }\n            ]\n          }\n        }\n    }\n    finalAllocation = { ...finalAllocation, ...equityAllocation }\n  }\n\n  // Handle Alternative allocation based on user choice\n  if (allocation.alternativesTotal > 0) {\n    switch(alternativeChoice) {\n      case 'gold':\n        finalAllocation['Precious Metals'] = {\n          percentage: allocation.alternativesTotal,\n          etfs: [\n            { name: 'Gold BeES', code: 'GOLDBEES', weight: allocation.alternativesTotal * 0.7 },\n            { name: 'Silver ETF', code: 'SILVERBEES', weight: allocation.alternativesTotal * 0.3 }\n          ]\n        }\n        break\n      case 'real_estate':\n        finalAllocation['Real Estate'] = {\n          percentage: allocation.alternativesTotal,\n          etfs: [\n            { name: 'Nexus REIT', code: 'NXST-RR', weight: allocation.alternativesTotal }\n          ]\n        }\n        break\n      case 'infra':\n        finalAllocation['Infrastructure'] = {\n          percentage: allocation.alternativesTotal,\n          etfs: [\n            { name: 'PowerGrid InvIT', code: 'PGINVIT-IV', weight: allocation.alternativesTotal }\n          ]\n        }\n        break\n      case 'none':\n        // If no alternative preference, redistribute to equity and debt\n        const extraAllocation = allocation.alternativesTotal / 2\n        allocation.equityTotal += extraAllocation\n        allocation.debtTotal += extraAllocation\n        break\n    }\n  }\n\n  // Add Debt allocation\n  if (allocation.debtTotal > 0) {\n    finalAllocation['Debt'] = {\n      percentage: allocation.debtTotal,\n      etfs: [\n        { name: 'Liquid BeES', code: 'LIQUIDBEES', weight: allocation.debtTotal }\n      ]\n    }\n  }\n\n  return finalAllocation\n})\n\n// Helper functions for allocation adjustments\nfunction adjustAllocationForLargeCap(allocation) {\n  // Implement logic to increase large cap allocation\n  return allocation\n}\n\nfunction adjustAllocationForMidCap(allocation) {\n  // Implement logic to increase mid cap allocation\n  return allocation\n}\n\nfunction adjustAllocationForSmallCap(allocation) {\n  // Implement logic to increase small cap allocation\n  return allocation\n}\nconst prepareLLMData = computed(() => {\n  const userResponses = []\n  let totalRiskScore = 0\n  let questionCount = 0\n\n  sections.forEach(section => {\n    section.questions.forEach(question => {\n      const answer = answers.value[question.id]\n      if (answer) {\n        userResponses.push({\n          section: section.title,\n          question: question.text,\n          answer: answer.text,\n          risk_score: answer.risk_score || null\n        })\n        \n        if (answer.risk_score) {\n          totalRiskScore += answer.risk_score\n          questionCount++\n        }\n      }\n    })\n  })\n\n  const avgRiskScore = questionCount > 0 ? (totalRiskScore / (questionCount * 4)) * 100 : 0\n  \n  return {\n    user_responses: userResponses,\n    risk_profile: {\n      score: avgRiskScore,\n      category: riskProfile.value.title,\n      description: riskProfile.value.description\n    },\n    category_scores: categoryScores.value,\n    demographics: {\n      age_group: answers.value.age_group?.text || null,\n      employment: answers.value.employment_status?.text || null,\n      income_stability: answers.value.income_source?.text || null\n    },\n    financial_health: {\n      monthly_savings: answers.value.monthly_savings?.text || null,\n      emergency_fund: answers.value.emergency_fund?.text || null,\n      debt_obligations: answers.value.debt_obligations?.text || null\n    }\n  }\n})\nconst handleAnswer = (option) => {\n  answers.value = {\n    ...answers.value,\n    [currentQuestion.value.id]: option\n  }\n  const currentQuestionId = currentQuestion.value.id\n  sections.forEach(section => {\n    section.questions.forEach(question => {\n      if (question.id === currentQuestionId) {\n        question.user_answer = option\n      }\n    })\n  })\n  if (currentQuestionIndex.value < currentSection.value.questions.length - 1) {\n    currentQuestionIndex.value++\n  } else if (currentSectionIndex.value < sections.length - 1) {\n    currentSectionIndex.value++\n    currentQuestionIndex.value = 0\n  } else {\n    showResults.value = true\n  }\n}\nconst getLLMPrompt = () => {\n  const data = prepareLLMData.value\n  \n  const prompt =  `In the context of the Indian Financial markets, g  iven the following user profile and risk assessment:\n\nDemographics:\n- Age Group: ${data.demographics.age_group}\n- Employment: ${data.demographics.employment}\n- Income Stability: ${data.demographics.income_stability}\n\nFinancial Health:\n- Monthly Savings: ${data.financial_health.monthly_savings}\n- Emergency Fund: ${data.financial_health.emergency_fund}\n- Debt Obligations: ${data.financial_health.debt_obligations}\n\nBased on this profile, please provide:\n1. Specific mutual fund recommendations (including debt, equity, and hybrid funds) with allocation percentages\n2. Emergency fund recommendations considering the user's current situation\n3. Insurance recommendations (life, health, and other relevant insurance products)\n4. Any other financial planning advice specific to this user's profile\n\nPlease provide detailed explanations for each recommendation, considering the user's risk profile, age, employment stability, and current financial health.`\n\nconsole.log(prompt)\n}\nconst resetQuiz = () => {\n  currentSectionIndex.value = 0\n  currentQuestionIndex.value = 0\n  answers.value = {}\n  showResults.value = false\n}\n\ndefineExpose({\n  resetQuiz,\n  answers,\n  riskProfile,\n  recommendedAllocation\n})\n</script>\n\n"],"names":["_sfc_main","VueApexCharts","item","val","newVal","err","component","info","_hoisted_1","_openBlock","_createElementBlock","_createBlock","_component_apexcharts","$data","$options","categoryScores","computed","scores","counts","sections","section","answers","questionId","answer","q","currentScore","currentCount","category","score","currentSectionIndex","ref","currentQuestionIndex","showResults","currentSection","currentQuestion","currentQuestionNumber","number","i","totalQuestions","total","progressPercentage","riskScore","totalRiskScore","riskProfile","age","_a","employmentStatus","_b","incomeStability","_c","baseRiskScore","finalScore","recommendedAllocation","profile","capPreference","alternativeChoice","allocation","finalAllocation","equityAllocation","extraAllocation","userResponses","questionCount","question","avgRiskScore","_d","_e","_f","handleAnswer","option","currentQuestionId","resetQuiz","__expose"],"mappings":"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"}